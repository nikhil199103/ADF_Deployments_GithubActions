name: ADF Deployment

on:
  push:
    branches:
      - adf_publish
  workflow_dispatch:
    inputs:
      skipAzModuleInstallation:
        description: 'Skip the installation of Az PowerShell module'
        required: false
        default: 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stage: ['test']
      fail-fast: true
      max-parallel: 1
    environment:
      name: ${{ matrix.stage }}

    steps:
      - name: Set Variables
        run: |
          echo "Setting up required environment variables"
          echo "STORAGE_ACCOUNT_NAME=adftempaltedeploy" >> $GITHUB_ENV
          echo "CONTAINER_NAME=templates" >> $GITHUB_ENV
          echo "FILE_PATH=./adf-github-actions/linkedTemplates/" >> $GITHUB_ENV

      - name: Checkout Target Branch (adf_publish)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: adf_publish

      - name: Fetch Scripts from Main Branch
        run: |
          git fetch origin main
          mkdir -p temp
          git show origin/main:PrePostDeploymentScript.ps1 > temp/PrePostDeploymentScript.ps1
          git show origin/main:GetADFTriggerState.ps1 > temp/GetADFTriggerState.ps1
          git checkout adf_publish
          ls -l temp

      - name: Install Az PowerShell module
        if: inputs.skipAzModuleInstallation != 'true'
        run: |
          Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force
        shell: pwsh

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Upload Linked Templates to Azure Storage
        run: |
          az storage container create --name $CONTAINER_NAME --account-name $STORAGE_ACCOUNT_NAME --auth-mode login
          for file in $FILE_PATH*.json; do
            az storage blob upload --account-name $STORAGE_ACCOUNT_NAME --container-name $CONTAINER_NAME --file "$file" --name "$(basename $file)" --overwrite
          done

      - name: Generate SAS Token
        id: sas
        run: |
          END_DATE=$(date -u -d "1 hour" '+%Y-%m-%dT%H:%MZ')
          SAS_TOKEN=$(az storage container generate-sas --account-name $STORAGE_ACCOUNT_NAME --name $CONTAINER_NAME --permissions lr --expiry $END_DATE --output tsv)
          if [ -z "$SAS_TOKEN" ]; then
            echo "Error: SAS token generation failed"
            exit 1
          fi
          TEMPLATE_BASE_URL="https://${STORAGE_ACCOUNT_NAME}.blob.core.windows.net/${CONTAINER_NAME}"
          echo "SAS_TOKEN=$SAS_TOKEN" >> $GITHUB_ENV
          echo "TEMPLATE_BASE_URL=$TEMPLATE_BASE_URL" >> $GITHUB_ENV

      - name: Run Pre-deployment script
        run: |
          pwsh -command "./temp/PrePostDeploymentScript.ps1 -armTemplate '${{ env.TEMPLATE_BASE_URL }}/ArmTemplate_master.json?${{ env.SAS_TOKEN }}' -ResourceGroupName test -DataFactoryName adf-github-actions-test -predeployment $true -deleteDeployment $false"
        shell: pwsh

      - name: Deploy ADF ARM Templates
        uses: Azure/arm-deploy@v1
        with:
          resourceGroupName: test
          template: ${{ env.TEMPLATE_BASE_URL }}/ArmTemplate_master.json?${{ env.SAS_TOKEN }}
          parameters: |
            factoryName=adf-github-actions-test
            linkedTemplateBaseUrl=${{ env.TEMPLATE_BASE_URL }}
            linkedTemplateSasToken=${{ env.SAS_TOKEN }}
          deploymentMode: Incremental

      - name: Run Post-deployment script
        run: |
          pwsh -command "./temp/PrePostDeploymentScript.ps1 -armTemplate '${{ env.TEMPLATE_BASE_URL }}/ArmTemplate_master.json?${{ env.SAS_TOKEN }}' -ResourceGroupName test -DataFactoryName adf-github-actions-test -predeployment $false -deleteDeployment $true"
        shell: pwsh