name: ADF Deployment

on:
  push:
    branches:
      - adf_publish
  workflow_dispatch:
    inputs:
      skipAzModuleInstallation:
        description: 'Skip the installation of Az PowerShell module'
        required: false
        default: 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stage: ['test']
      fail-fast: true
      max-parallel: 1
    environment:
      name: ${{ matrix.stage }}

    steps:
      # Step 1: Checkout the adf_publish branch
      - name: Checkout Target Branch (adf_publish)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: adf_publish

      # Step 2: Fetch PrePostDeploymentScript.ps1 from main branch
      - name: Fetch Script from Main Branch
        run: |
          # Fetch the main branch
          git fetch origin main

          # Copy the script to a temp directory
          mkdir -p temp
          git show origin/main:PrePostDeploymentScript.ps1 > temp/PrePostDeploymentScript.ps1
          git show origin/main:GetADFTriggerState.ps1 > temp/GetADFTriggerState.ps1

          # Switch back to adf_publish branch
          git checkout adf_publish

          # Verify script location
          echo "Copied script:"
          ls -l temp

      # Step 3: Debug Directory Structure
      - name: Debug Directory Structure
        run: |
          echo "Current directory:"
          pwd
          echo "Listing files:"
          ls -R

      # Step 4: Install Az PowerShell module conditionally
      - name: Install Az PowerShell module
        if: inputs.skipAzModuleInstallation != 'true'
        run: |
          Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force
        shell: pwsh

      # Step 5: Azure Login
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      # Step 6: Get list of Triggers
      - name: List ADF Triggers
        run: |
            echo "Fetching triggers for Data Factory: adf-github-actions-test"
            pwsh -command "./temp/GetADFTriggerState.ps1 -ResourceGroupName test -DataFactoryName adf-github-actions-test"
        shell: bash    
      # Step 7: Run Pre-deployment script
      - name: Run Pre-deployment script
        run: |
          pwsh -command "./temp/PrePostDeploymentScript.ps1 -armTemplate ./adf-github-actions/ARMTemplateForFactory.json -ResourceGroupName test -DataFactoryName adf-github-actions-test -predeployment $true -deleteDeployment $false"
        shell: pwsh

      # Step 8: Deploy ADF ARM Templates
      - name: Deploy ADF ARM Templates
        uses: Azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ vars.AZURE_RG }}
          template: ./adf-github-actions/ARMTemplateForFactory.json
          parameters: |
            factoryName=${{ vars.ADF_FACTORYNAME }}

      # Step 9: Run Post-deployment script
      - name: Run Post-deployment script
        run: |
          pwsh -command "./temp/PrePostDeploymentScript.ps1 -armTemplate ./adf-github-actions/ARMTemplateForFactory.json -ResourceGroupName test -DataFactoryName adf-github-actions-test -predeployment $false -deleteDeployment $true"
        shell: pwsh